% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_elements.R
\name{get_elements}
\alias{get_elements}
\title{Lazily retrieve elements from a Cartesian product}
\usage{
get_elements(lc, indices, index_colname = ".element")
}
\arguments{
\item{lc}{A \code{lazy_cartesian} object, created with \code{rlazycartesian::lazy_cartesian()}.}

\item{indices}{A numeric vector with indices of the elements to retrieve.}

\item{index_colname}{A string with the column name for the indices in the output
data frame. By default, ".element".}
}
\value{
A data frame in which each row is an element from the Cartesian product.
}
\description{
This function lazily retrieves elements from a Cartesian product, given a vector of indices.
}
\examples{
l <- list(color  = c("Red", "Blue", "Yellow"),
          shape  = c("Square", "Circle"),
          number = 1:3)

r <- list(
  restriction1 = list(color = "Red", shape = "Circle"),
  restriction2 = list(shape = "Square", number = c(1, 3))
)

lc <- lazy_cartesian(l, r)
get_elements(lc, c(2, 8))

}
\references{
Burdsall, T. (2018). \code{lazy-cartesian-product}: .hpp library to efficiently
generate combinations using the Lazy Cartesian Product algorithm. \url{https://github.com/tylerburdsall/lazy-cartesian-product}
}
